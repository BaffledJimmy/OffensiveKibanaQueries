{
  "version": true,
  "size": 500,
  "sort": [
    {
      "@timestamp": {
        "order": "desc",
        "unmapped_type": "boolean"
      }
    }
  ],
  "_source": {
    "excludes": []
  },
  "aggs": {
    "2": {
      "date_histogram": {
        "field": "@timestamp",
        "fixed_interval": "3h",
        "time_zone": "Europe/London",
        "min_doc_count": 1
      }
    }
  },
  "stored_fields": [
    "*"
  ],
  "script_fields": {},
  "docvalue_fields": [
    {
      "field": "@timestamp",
      "format": "date_time"
    },
    {
      "field": "event.created",
      "format": "date_time"
    },
    {
      "field": "event.end",
      "format": "date_time"
    },
    {
      "field": "event.start",
      "format": "date_time"
    },
    {
      "field": "file.accessed",
      "format": "date_time"
    },
    {
      "field": "file.created",
      "format": "date_time"
    },
    {
      "field": "file.ctime",
      "format": "date_time"
    },
    {
      "field": "file.mtime",
      "format": "date_time"
    },
    {
      "field": "kafka.block_timestamp",
      "format": "date_time"
    },
    {
      "field": "netflow.collection_time_milliseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.exporter.timestamp",
      "format": "date_time"
    },
    {
      "field": "netflow.flow_end_microseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.flow_end_milliseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.flow_end_nanoseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.flow_end_seconds",
      "format": "date_time"
    },
    {
      "field": "netflow.flow_start_microseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.flow_start_milliseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.flow_start_nanoseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.flow_start_seconds",
      "format": "date_time"
    },
    {
      "field": "netflow.max_export_seconds",
      "format": "date_time"
    },
    {
      "field": "netflow.max_flow_end_microseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.max_flow_end_milliseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.max_flow_end_nanoseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.max_flow_end_seconds",
      "format": "date_time"
    },
    {
      "field": "netflow.min_export_seconds",
      "format": "date_time"
    },
    {
      "field": "netflow.min_flow_start_microseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.min_flow_start_milliseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.min_flow_start_nanoseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.min_flow_start_seconds",
      "format": "date_time"
    },
    {
      "field": "netflow.monitoring_interval_end_milli_seconds",
      "format": "date_time"
    },
    {
      "field": "netflow.monitoring_interval_start_milli_seconds",
      "format": "date_time"
    },
    {
      "field": "netflow.observation_time_microseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.observation_time_milliseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.observation_time_nanoseconds",
      "format": "date_time"
    },
    {
      "field": "netflow.observation_time_seconds",
      "format": "date_time"
    },
    {
      "field": "netflow.system_init_time_milliseconds",
      "format": "date_time"
    },
    {
      "field": "process.start",
      "format": "date_time"
    },
    {
      "field": "suricata.eve.flow.end",
      "format": "date_time"
    },
    {
      "field": "suricata.eve.flow.start",
      "format": "date_time"
    },
    {
      "field": "suricata.eve.timestamp",
      "format": "date_time"
    },
    {
      "field": "suricata.eve.tls.notafter",
      "format": "date_time"
    },
    {
      "field": "suricata.eve.tls.notbefore",
      "format": "date_time"
    }
  ],
  "query": {
    "bool": {
      "must": [],
      "filter": [
        {
          "match_all": {}
        },
        {
          "range": {
            "@timestamp": {
              "format": "strict_date_optional_time",
              "gte": "2019-12-23T15:07:35.132Z",
              "lte": "2019-12-30T15:07:35.132Z"
            }
          }
        }
      ],
      "should": [],
      "must_not": [
        {
          "match_phrase": {
            "user.name": {
              "query": "X-Forwarded-For:- - -"
            }
          }
        },
        {
          "match_phrase": {
            "http.response.status_code": {
              "query": 200
            }
          }
        }
      ]
    }
  },
  "highlight": {
    "pre_tags": [
      "@kibana-highlighted-field@"
    ],
    "post_tags": [
      "@/kibana-highlighted-field@"
    ],
    "fields": {
      "*": {}
    },
    "fragment_size": 2147483647
  }
}
